---
title: "R 基础作图练习"
author: "Chris Qi"
date: "9/5/2018"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
tutorial::go_interactive()
```
这次我们来练习基础作图。


散点图
使用鸢尾花数据(`iris`)里的花瓣长度和宽度做散点图
```{r ex="test1", type="sample-code"}
plot()
```

```{r ex="test1", type="solution"}
plot(iris$Petal.Length, iris$Petal.Width)
```

在`plot`函数里面添加细节，修改点的形状`pch`和颜色`col`，比如白色空心圆换成红色雪花:
```{r ex="test2", type="sample-code"}
#

```

```{r ex="test2", type="solution"}
plot(iris$Petal.Length, iris$Petal.Width,
  col = "red", pch = 8)
```

载入`lattice`包，使用`xyplot()`函数来做上面的图：
```{r ex="test3", type="sample-code"}
library(lattice)
xyplot()
```

```{r ex="test3", type="solution"}
library(lattice)
xyplot(Petal.Width ~ Petal.Length, iris,
  col = "red", pch = 8)
```

按品种来做上面的图，分成三个面板：

```{r ex="4", type="sample-code"}
library(lattice)
#
```

```{r ex="4", type="solution"}
library(lattice)
xyplot(Petal.Width ~ Petal.Length | Species, iris)
```


在`xyplot()` 函数里，添加`layout=c()`把三个图拍成一列三行
```{r ex="5", type="sample-code"}
library(lattice)
#
```

```{r ex="5", type="solution"}
library(lattice)
xyplot(Petal.Width ~ Petal.Length | Species,
  iris, layout = c(1, 3))
```

把上面的图存成（赋值给）变量myPlot，使用赋值符号 `<-`
```{r ex="6", type="sample-code"}
library(lattice)
myPlot
```

```{r ex="6", type="solution"}
library(lattice)
myPlot<-xyplot(Petal.Width ~ Petal.Length | Species,
  iris, layout = c(1, 3))
myPlot
```



在下图中修改坐标轴`xlab`, `ylab`的名称并添加标题 `relationship between width and length of Iris` petal`:
```{r ex="7", type="sample-code"}
library(lattice)
xyplot(Petal.Width ~ Petal.Length, iris,
  col = "red", pch = 8)
```

```{r ex="7", type="solution"}
library(lattice)
xyplot(Petal.Width ~ Petal.Length, iris,
  col = "red", pch = 8,
  xlab="Width",
  ylab="Length",
  main="relationship between width and length of Iris"
  )
```

使用`hist()`绘制花瓣长度的直方图（频数）:
```{r ex="8", type="sample-code"}
#
```

```{r ex="8", type="solution"}
hist(iris$Petal.Length)
```


使用`truehist()`绘制花瓣宽度度的直方图（频率）:
```{r ex="9", type="sample-code"}
library(MASS)

```

```{r ex="9", type="solution"}
library(MASS)
truehist(iris$Petal.Width)
```

使用`par(mfrow(,))`把上面两幅图放到一起，一左一右
```{r ex="10", type="sample-code"}
library(MASS)
par(mfrow=c(,))
```

```{r ex="10", type="solution"}
library(MASS)
par(mfrow=c(1,2))
hist(iris$Petal.Length)
truehist(iris$Petal.Width)
```

使用`mtcars`里的mpg做箱图
```{r ex="11", type="sample-code"}
#
```

```{r ex="11", type="solution"}
boxplot(mtcars$mpg)
```

使用`mtcars`里的mpg做箱图，给箱图添加坐标轴和标题：
```{r ex="12", type="sample-code"}
#
```

```{r ex="12", type="solution"}
boxplot(mtcars$mpg, main="Car Milage Data", 
  	xlab="Number of Cylinders", ylab="Miles Per Gallon")
```

在上图的基础上，把图拆分成不同引擎数量的mpg的箱图
```{r ex="13", type="sample-code"}
#
```

```{r ex="13", type="solution"}
boxplot(mpg~cyl,data=mtcars, main="Car Milage Data", 
  	xlab="Number of Cylinders", ylab="Miles Per Gallon")
```


大BOSS：

四幅图放在一个面板里，两个一排。

* 第一幅图，`airquality`里温度变量的直方图（频数）

* 第二幅图，`airquality`里该变量的直方图（频率）并添加密度曲线，填充红色

* 第三幅图，`airquality`里风速变量的直方图（频数）

* 第四幅图，`airquality`里该变量的直方图（频率），并添加密度曲线，填充蓝色

```{r ex="test14", type="sample-code"}
#
```

```{r ex="test14", type="solution"}
par(mfrow=c(2,2))
library(MASS)
hist(airquality$Temp)
truehist(airquality$Temp, col="red")
lines(density(airquality$Temp))

hist(airquality$Wind)
truehist(airquality$Wind, col="blue")
lines(density(airquality$Wind))
```





