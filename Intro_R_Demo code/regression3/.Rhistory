main = "SALES boxplot",
ylab = "g per decaliter")
boxplot(advertising$TV, col = "orange", border="blue",
main = "TV boxplot",
ylab = "percent values")
# sales outliers
boxplot.stats(advertising$sales)$out
qplot(sales, data = advertising, geom="histogram", binwidth=0.5,
fill=I("azure4"), col=I("azure3")) +
labs(title = "sales") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="sales (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50), minor_breaks = NULL) +
scale_x_continuous(breaks = c(10:25), minor_breaks = NULL) +
geom_vline(xintercept = mean(newdata$HEMAGLOBIN), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(newdata$HEMAGLOBIN), show_guide=TRUE, color
="blue", labels="Median")
qplot(sales, data = advertising, geom="histogram", binwidth=0.5,
fill=I("azure4"), col=I("azure3")) +
labs(title = "sales") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="sales (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50), minor_breaks = NULL) +
scale_x_continuous(breaks = c(10:25), minor_breaks = NULL) +
geom_vline(xintercept = mean(advertising$sales), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$sales), show_guide=TRUE, color
="blue", labels="Median")
qplot(sales, data = advertising, geom="histogram", binwidth=0.5,
fill=I("azure4"), col=I("azure3")) +
labs(title = "sales") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="sales (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50), minor_breaks = NULL) +
scale_x_continuous(breaks = c(0:50), minor_breaks = NULL) +
geom_vline(xintercept = mean(advertising$sales), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$sales), show_guide=TRUE, color
="blue", labels="Median")
qplot(sales, data = advertising, geom="histogram", binwidth=0.5,
fill=I("azure4"), col=I("azure3")) +
labs(title = "sales") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="sales (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50), minor_breaks = NULL) +
scale_x_continuous(breaks = c(0:50,5), minor_breaks = NULL) +
geom_vline(xintercept = mean(advertising$sales), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$sales), show_guide=TRUE, color
="blue", labels="Median")
qplot(sales, data = advertising, geom="histogram", binwidth=0.5,
fill=I("azure4"), col=I("azure3")) +
labs(title = "sales") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="sales (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50), minor_breaks = NULL) +
scale_x_continuous(breaks = c(1:50), minor_breaks = NULL) +
geom_vline(xintercept = mean(advertising$sales), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$sales), show_guide=TRUE, color
="blue", labels="Median")
qplot(sales, data = advertising, geom="histogram", binwidth=0.5,
fill=I("azure4"), col=I("azure3")) +
labs(title = "sales") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="sales (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,5,10,15,20,25,30,35,40,45,50), minor_breaks = NULL) +
scale_x_continuous(breaks = c(1:50), minor_breaks = 5) +
geom_vline(xintercept = mean(advertising$sales), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$sales), show_guide=TRUE, color
="blue", labels="Median")
qplot(sales, data = advertising, geom="histogram", binwidth=0.5,
fill=I("azure4"), col=I("azure3")) +
labs(title = "sales") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="sales (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(1:15), minor_breaks = NULL) +
scale_x_continuous(breaks = c(1:50), minor_breaks = 5) +
geom_vline(xintercept = mean(advertising$sales), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$sales), show_guide=TRUE, color
="blue", labels="Median")
qplot(sales, data = advertising, geom="histogram", binwidth=0.5,
fill=I("azure4"), col=I("azure3")) +
labs(title = "sales") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="sales (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,2,4,6,8,10,12,14,16,18), minor_breaks = NULL) +
scale_x_continuous(breaks = c(1:50), minor_breaks = 5) +
geom_vline(xintercept = mean(advertising$sales), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$sales), show_guide=TRUE, color
="blue", labels="Median")
?scale_y_continuous
qplot(sales, data = advertising, geom="histogram", binwidth=0.5,
fill=I("azure4"), col=I("azure3")) +
labs(title = "sales") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="sales (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,2,4,6,8,10,12,14,16,18), minor_breaks = NULL) +
scale_x_continuous(breaks = NULL, minor_breaks = 5) +
geom_vline(xintercept = mean(advertising$sales), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$sales), show_guide=TRUE, color
="blue", labels="Median")
qplot(sales, data = advertising, geom="histogram", binwidth=0.5,
fill=I("azure4"), col=I("azure3")) +
labs(title = "sales") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="sales (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,2,4,6,8,10,12,14,16,18), minor_breaks = NULL) +
scale_x_continuous(breaks = c(1:50), minor_breaks = 5) +
geom_vline(xintercept = mean(advertising$sales), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$sales), show_guide=TRUE, color
="blue", labels="Median")
qplot(sales, data = advertising, geom="histogram", binwidth=0.5,
fill=I("azure4"), col=I("azure3")) +
labs(title = "sales") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="sales (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,2,4,6,8,10,12,14,16,18), minor_breaks = NULL) +
scale_x_continuous(breaks = c(1,5,10,20,30,50), minor_breaks = 5) +
geom_vline(xintercept = mean(advertising$sales), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$sales), show_guide=TRUE, color
="blue", labels="Median")
qplot(TV, data = advertising, geom="histogram", binwidth=0.5,
fill=I("azure4"), col=I("azure3")) +
labs(title = "TV") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="AD budget in TV (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,2,4,6,8,10,12,14,16,18), minor_breaks = NULL) +
scale_x_continuous(breaks = c(1,5,10,20,30,50), minor_breaks = 5) +
geom_vline(xintercept = mean(advertising$TV), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$TV), show_guide=TRUE, color
="blue", labels="Median")
qplot(TV, data = advertising, geom="histogram", binwidth=2,
fill=I("azure4"), col=I("azure3")) +
labs(title = "TV") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="AD budget in TV (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,2,4,6,8,10,12,14,16,18), minor_breaks = NULL) +
scale_x_continuous(breaks = c(1,5,10,20,30,50), minor_breaks = 5) +
geom_vline(xintercept = mean(advertising$TV), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$TV), show_guide=TRUE, color
="blue", labels="Median")
qplot(TV, data = advertising, geom="histogram", binwidth=5,
fill=I("azure4"), col=I("azure3")) +
labs(title = "TV") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="AD budget in TV (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,2,4,6,8,10,12,14,16,18), minor_breaks = NULL) +
scale_x_continuous(breaks = c(1,5,10,20,30,50), minor_breaks = 5) +
geom_vline(xintercept = mean(advertising$TV), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$TV), show_guide=TRUE, color
="blue", labels="Median")
qplot(sales, data = advertising, geom="histogram", binwidth=0.5,
fill=I("azure4"), col=I("azure3")) +
labs(title = "sales") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="sales (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,2,4,6,8,10,12,14,16,18), minor_breaks = NULL) +
scale_x_continuous(breaks = c(1,5,10,20,30,50), minor_breaks = 5) +
geom_vline(xintercept = mean(advertising$sales), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$sales), show_guide=TRUE, color
="blue", labels="Median")
qplot(sales, data = advertising, geom="histogram", binwidth=5,
fill=I("azure4"), col=I("azure3")) +
labs(title = "sales") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="sales (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,2,4,6,8,10,12,14,16,18), minor_breaks = NULL) +
scale_x_continuous(breaks = c(1,5,10,20,30,50), minor_breaks = 5) +
geom_vline(xintercept = mean(advertising$sales), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$sales), show_guide=TRUE, color
="blue", labels="Median")
qplot(sales, data = advertising, geom="histogram", binwidth=1,
fill=I("azure4"), col=I("azure3")) +
labs(title = "sales") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="sales (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,2,4,6,8,10,12,14,16,18), minor_breaks = NULL) +
scale_x_continuous(breaks = c(1,5,10,20,30,50), minor_breaks = 5) +
geom_vline(xintercept = mean(advertising$sales), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$sales), show_guide=TRUE, color
="blue", labels="Median")
qplot(sales, data = advertising, geom="histogram", binwidth=1,
fill=I("azure4"), col=I("azure3")) +
labs(title = "sales") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="sales (units)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,2,4,6,8,10,12,14,16,18), minor_breaks = NULL) +
scale_x_continuous(breaks = c(1,5,10,20,30,50), minor_breaks = 5) +
geom_vline(xintercept = mean(advertising$sales), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$sales), show_guide=TRUE, color
="blue", labels="Median")
qplot(TV, data = advertising, geom="histogram", binwidth=5,
fill=I("azure4"), col=I("azure3")) +
labs(title = "TV") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="AD budget in TV (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,2,4,6,8,10,12,14,16,18), minor_breaks = NULL) +
scale_x_continuous(limits = c(0, 300)), minor_breaks = NULL) +
qplot(TV, data = advertising, geom="histogram", binwidth=5,
fill=I("azure4"), col=I("azure3")) +
labs(title = "TV") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="AD budget in TV (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,2,4,6,8,10,12,14,16,18), minor_breaks = NULL) +
scale_x_continuous(limits = c(0, 300)) +
geom_vline(xintercept = mean(advertising$TV), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$TV), show_guide=TRUE, color
="blue", labels="Median")
qplot(TV, data = advertising, geom="histogram", binwidth=5,
fill=I("azure4"), col=I("azure3")) +
labs(title = "TV") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="AD budget in TV (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,2,4,6,8,10,12,14,16,18), minor_breaks = NULL) +
scale_x_continuous(limits = c(0, 300)) +
geom_vline(xintercept = mean(advertising$TV), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$TV), show_guide=TRUE, color
="blue", labels="Median")
set.seed(100) # 设置种子点，以便重复再现同样的结果
trainingRowIndex <- sample(1:nrow(advertising), 0.7*nrow(advertising))
# 将数据七三分，training vs. testing
train <- advertising[trainingRowIndex, ] # model training data
test <- advertising[-trainingRowIndex, ] # test data
ggplot(advertising, aes(x=TV, y=sales))+
geom_point(olour = "blue", size = 1.5)+
scale_y_continuous(limits=c(0,300))+
scale_x_continuous(limits=c(0,50))+
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("TV ad budget and sales relationship")
ggplot(advertising, aes(x=TV, y=sales))+
geom_point(colour = "blue", size = 1.5)+
scale_y_continuous(limits=c(0,300))+
scale_x_continuous(limits=c(0,50))+
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("TV ad budget and sales relationship")
ggplot(advertising, aes(x=TV, y=sales))+
geom_point(colour = "blue", size = 1.5)+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0,300))+
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("TV ad budget and sales relationship")
ggplot(advertising, aes(x=TV, y=sales))+
geom_point(colour = "blue", size = 1.5)+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0,300))+
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("TV ad budget and sales relationship")+
geom_smooth(method="lm")
ggplot(advertising, aes(x=TV, y=sales))+
geom_point(colour = "blue", size = 1.5)+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0,300))+
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("TV ad budget and sales relationship")+
geom_smooth(method="lm", color="red")
model1 <- lm(sales ~ TV, data = train)
summary(model1)
plot(model1, pch=16, col="blue", lty=1, lwd=2, which=1)
Normal Q-Q
#Normal Q-Q
plot(mod1, pch=16, col="blue", lty=1, lwd=2, which=2)
#Normal Q-Q
plot(model1, pch=16, col="blue", lty=1, lwd=2, which=2)
plot(model1, pch=16, col="blue", lty=1, lwd=2, which=4)
View(advertising)
par(mfrow=c(1, 2))  # it divides graph area in two parts
boxplot(advertising$sales, col = "yellow", border="blue",
main = "SALES boxplot",
ylab = "g per decaliter")
boxplot(advertising$TV, col = "orange", border="blue",
main = "TV boxplot",
ylab = "percent values")
advertising$outlier = ifelse(advertising$sales>40,"Y","N") # create condition Yes/No if outlier
View(advertising)
ggplot(data=advertising, aes(x=TV, y=sales, colors=outlier))+
geom_point()+
ggtitle("TV ads and sales")+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0,300))+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=advertising, aes(x=TV, y=sales, fill=outlier))+
geom_point()+
ggtitle("TV ads and sales")+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0,300))+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=advertising, aes(x=TV, y=sales, fill=as.factor(outlier)))+
geom_point()+
ggtitle("TV ads and sales")+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0,300))+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=advertising, aes(x=TV, y=sales))+
geom_point(fill=as.factor(outlier))+
ggtitle("TV ads and sales")+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0,300))+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=advertising, aes(x=TV, y=sales))+
geom_point(col=as.factor(outlier))+
ggtitle("TV ads and sales")+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0,300))+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=advertising, aes(x=TV, y=sales, col=as.factor(outlier)))+
geom_point()+
ggtitle("TV ads and sales")+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0,300))+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=advertising, aes(x=TV, y=sales, col=as.factor(outlier)))+
geom_point()+
ggtitle("TV ads and sales")+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0,300))+
theme(plot.title = element_text(hjust = 0.5))
ad_new<-subset(advertising, sales<40)
model2 <- lm(sales ~ TV, data = ad_new)
summary(model2)
model1 <- lm(sales ~ TV, data = advertising)
summary(model1)
model2 <- lm(sales ~ TV, data = ad_new)
summary(model2)
summary(model2)
summary(model1)
AIC(model12)
AIC(model2)
AIC(model1)
BIC(model2)
BIC(model1)
summary(model2)
summary(model1)
modTrain <- lm(sales ~ TV, data=train)  # build the model
predict <- predict(modTrain, test)  # predicted values
summary(modTrain)
act_pred <- data.frame(cbind(actuals=test$sales, predicteds=predict)) # actuals_predicteds
cor(act_pred) # correlation_accuracy
head(act_pred, n=10)
set.seed(100) # 设置种子点，以便重复再现同样的结果
trainingRowIndex <- sample(1:nrow(ad_new), 0.7*nrow(ad_new))
# 将数据七三分，training vs. testing
train <- ad_new[trainingRowIndex, ] # model training data
test <- ad_new[-trainingRowIndex, ] # test data
set.seed(100) # 设置种子点，以便重复再现同样的结果
trainingRowIndex <- sample(1:nrow(ad_new), 0.7*nrow(ad_new))
# 将数据七三分，training vs. testing
train <- ad_new[trainingRowIndex, ] # model training data
test <- ad_new[-trainingRowIndex, ] # test data
act_pred <- data.frame(cbind(actuals=test$sales, predicteds=predict)) # actuals_predicteds
cor(act_pred) # correlation_accuracy
head(act_pred, n=10)
# Packages
library(tidyverse)  # data manipulation and visualization
library(modelr)     # provides easy pipeline modeling functions
library(broom)      # helps to tidy up model outputs
setwd("~/R Teaching/demo code/regression3/")
advertising <- read.csv("advertising.csv")
advertising
par(mfrow=c(1, 2))  # it divides graph area in two parts
boxplot(advertising$sales, col = "yellow", border="blue",
main = "SALES boxplot",
ylab = "g per decaliter")
boxplot(advertising$TV, col = "orange", border="blue",
main = "TV boxplot",
ylab = "percent values")
# sales outliers
boxplot.stats(advertising$sales)$out
qplot(sales, data = advertising, geom="histogram", binwidth=1,
fill=I("azure4"), col=I("azure3")) +
labs(title = "sales") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="sales (units)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,2,4,6,8,10,12,14,16,18), minor_breaks = NULL) +
scale_x_continuous(breaks = c(1,5,10,20,30,50), minor_breaks = 5) +
geom_vline(xintercept = mean(advertising$sales), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$sales), show_guide=TRUE, color
="blue", labels="Median")
qplot(TV, data = advertising, geom="histogram", binwidth=5,
fill=I("azure4"), col=I("azure3")) +
labs(title = "TV") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(x ="AD budget in TV (in ten thousand dollars)") +
labs(y = "Frequency") +
scale_y_continuous(breaks = c(0,2,4,6,8,10,12,14,16,18), minor_breaks = NULL) +
scale_x_continuous(limits = c(0, 300)) +
geom_vline(xintercept = mean(advertising$TV), show_guide=TRUE, color
="red", labels="Average") +
geom_vline(xintercept = median(advertising$TV), show_guide=TRUE, color
="blue", labels="Median")
ggplot(advertising, aes(x=TV, y=sales))+
geom_point(colour = "blue", size = 1.5)+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0,300))+
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("TV ad budget and sales relationship")
ggplot(advertising, aes(x=TV, y=sales))+
geom_point(colour = "blue", size = 1.5)+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0,300))+
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("TV ad budget and sales relationship")+
geom_smooth(method="lm", color="red")
model1 <- lm(sales ~ TV, data = advertising)
ggplot(data=advertising, aes(x=TV, y=sales, col=as.factor(outlier)))+
geom_point()+
ggtitle("TV ads and sales")+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0,300))+
theme(plot.title = element_text(hjust = 0.5))
advertising$outlier = ifelse(advertising$sales>40,"Y","N") # create condition Yes/No if outlier
ggplot(data=advertising, aes(x=TV, y=sales, col=as.factor(outlier)))+
geom_point()+
ggtitle("TV ads and sales")+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0,300))+
theme(plot.title = element_text(hjust = 0.5))
ad_new<-subset(advertising, sales<40)
model2 <- lm(sales ~ TV, data = ad_new)
summary(model2)
summary(model1)
AIC(model2)
AIC(model1)
BIC(model2)
BIC(model1)
set.seed(100) # 设置种子点，以便重复再现同样的结果
trainingRowIndex <- sample(1:nrow(ad_new), 0.7*nrow(ad_new))
# 将数据七三分，training vs. testing
train <- ad_new[trainingRowIndex, ] # model training data
test <- ad_new[-trainingRowIndex, ] # test data
modTrain <- lm(sales ~ TV, data=train)  # build the model
predict <- predict(modTrain, test)  # predicted values
summary(modTrain)
act_pred <- data.frame(cbind(actuals=test$sales, predicteds=predict)) # actuals_predicteds
cor(act_pred) # correlation_accuracy
set.seed(100) # 设置种子点，以便重复再现同样的结果
trainingRowIndex <- sample(1:nrow(ad_new), 0.7*nrow(ad_new))
# 将数据七三分，training vs. testing
train <- ad_new[trainingRowIndex, ] # model training data
test <- ad_new[-trainingRowIndex, ] # test data
modTrain <- lm(sales ~ TV, data=train)  # build the model
predict <- predict(modTrain, test)  # predicted values
summary(modTrain)
act_pred <- data.frame(cbind(actuals=test$sales, predicteds=predict)) # actuals_predicteds
cor(act_pred) # correlation_accuracy
act_pred <- data.frame(cbind(actuals=test$sales, predicteds=predict)) # actuals_predicteds
cor(act_pred) # correlation_accuracy
head(act_pred, n=10)
kfold <- CVlm(data = ad_new, form.lm = formula(sales ~ TV), m=5,
dots = FALSE, seed=123, legend.pos="topleft",
main="Cross Validation; k=5",
plotit=TRUE, printit=FALSE)
# Packages
library(tidyverse)  # data manipulation and visualization
library(modelr)     # provides easy pipeline modeling functions
library(broom)      # helps to tidy up model outputs
kfold <- CVlm(data = ad_new, form.lm = formula(sales ~ TV), m=5,
dots = FALSE, seed=123, legend.pos="topleft",
main="Cross Validation; k=5",
plotit=TRUE, printit=FALSE)
?CVlm
??CVlm
library(DAAG)
install.packages("DAAG")
library(DAAG)
kfold <- CVlm(data = ad_new, form.lm = formula(sales ~ TV), m=5,
dots = FALSE, seed=123, legend.pos="topleft",
main="Cross Validation; k=5",
plotit=TRUE, printit=FALSE)
kfold <- CVlm(data = ad_new, form.lm = formula(sales ~ TV), m=5,
dots = FALSE, seed=123, legend.pos="topleft",
main="Cross Validation; k=5",
plotit=TRUE, printit=FALSE)
